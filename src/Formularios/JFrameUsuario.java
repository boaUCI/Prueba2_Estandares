/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Archivos.ArchivoUsuario;
import Identidades.Usuario;
import Listas.ListaUsuario;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author estefania
 */
public class JFrameUsuario extends javax.swing.JFrame {

    /**
     * Creates new form JFrameUsuario
     */
    private ArchivoUsuario au;
    private Usuario u;
    private ListaUsuario lu;

    public JFrameUsuario() {
        lu = new ListaUsuario();
        au = new ArchivoUsuario(lu);
        u = new Usuario();
        au.abrir();
        au.listar();
        lu = au.getLe();
        initComponents();
        this.setVisible(true);
        this.validacionCampos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlDocumento = new javax.swing.JLabel();
        jlClave = new javax.swing.JLabel();
        jlTipoUsuario = new javax.swing.JLabel();
        jbGuadar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jtDocumento = new javax.swing.JTextField();
        jbVolver = new javax.swing.JButton();
        jcTipoUsuario = new javax.swing.JComboBox();
        jtClave = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Gestionar Usuarios");
        setMaximumSize(new java.awt.Dimension(410, 240));
        setMinimumSize(new java.awt.Dimension(410, 240));
        setPreferredSize(new java.awt.Dimension(410, 240));
        setResizable(false);
        getContentPane().setLayout(null);

        jlDocumento.setText("*Documento");
        getContentPane().add(jlDocumento);
        jlDocumento.setBounds(11, 33, 100, 14);

        jlClave.setText("*Clave");
        getContentPane().add(jlClave);
        jlClave.setBounds(14, 78, 100, 14);

        jlTipoUsuario.setText("*Tipo de Usuario");
        getContentPane().add(jlTipoUsuario);
        jlTipoUsuario.setBounds(11, 127, 110, 14);

        jbGuadar.setText("Guadar");
        jbGuadar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuadarActionPerformed(evt);
            }
        });
        getContentPane().add(jbGuadar);
        jbGuadar.setBounds(43, 173, 80, 23);

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jbEliminar);
        jbEliminar.setBounds(157, 173, 90, 23);

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jbBuscar);
        jbBuscar.setBounds(300, 120, 80, 23);

        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });
        getContentPane().add(jbModificar);
        jbModificar.setBounds(289, 173, 90, 23);

        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(jbLimpiar);
        jbLimpiar.setBounds(300, 30, 80, 23);
        getContentPane().add(jtDocumento);
        jtDocumento.setBounds(130, 20, 140, 30);

        jbVolver.setText("Volver");
        jbVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVolverActionPerformed(evt);
            }
        });
        getContentPane().add(jbVolver);
        jbVolver.setBounds(300, 80, 80, 23);

        jcTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ADMINISTRADOR", "EMPLEADO" }));
        getContentPane().add(jcTipoUsuario);
        jcTipoUsuario.setBounds(130, 124, 140, 20);
        getContentPane().add(jtClave);
        jtClave.setBounds(130, 65, 140, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbGuadarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuadarActionPerformed
        // TODO add your handling code here:
        if (!this.validacionObligatorios()) {
            if (lu.existeEmpleado(jtDocumento.getText())) {
                if (!lu.existe(jtDocumento.getText())) {
                    u = this.extraerDatos();
                    if (lu.setUsuario(u)) {
                        JOptionPane.showMessageDialog(this, "Usuario guardado");
                        limpiarCampos();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error al guardar");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El usuario ya existe");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Solo los Empleado pueden ser usuarios");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Complete los campos obligatorios");
        }


    }//GEN-LAST:event_jbGuadarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        // TODO add your handling code here:
        if (!this.validacionObligatorios()) {
            if (lu.existe(u.getDocumento())) {
                u = this.extraerDatos();
                if (lu.modificar(u)) {
                    JOptionPane.showMessageDialog(this, "Usuario modificado!");
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(this, "Error al modificar");
                }
            } else {
                JOptionPane.showMessageDialog(this, "El usuario no existe");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Complete los campos obligatorios");
        }
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:

        String s = JOptionPane.showInputDialog(this, "Ingrese le numero de documento");
        if (lu.existe(s)) {
            if (lu.eliminarUsuario(s)) {
                JOptionPane.showMessageDialog(this, "El usuario a sido eliminado");
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar");
            }
        } else {
            JOptionPane.showMessageDialog(this, "El usuario no existe");
        }


    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
        String s = JOptionPane.showInputDialog(this, "Ingrese le numero de documento");
        if (lu.existe(s)) {
            u = lu.getUsuario(s);
            if (u != null) {
                llenarCampos(u);
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo buscar");
            }
        } else {
            JOptionPane.showMessageDialog(this, "El usuario no existe");
        }


    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVolverActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "Esta seguro que desea salir");
        if (i == 0) {
            au.guardar(lu);
            this.dispose();
        } else {

        }
    }//GEN-LAST:event_jbVolverActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_jbLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuadar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbVolver;
    private javax.swing.JComboBox jcTipoUsuario;
    private javax.swing.JLabel jlClave;
    private javax.swing.JLabel jlDocumento;
    private javax.swing.JLabel jlTipoUsuario;
    private javax.swing.JPasswordField jtClave;
    private javax.swing.JTextField jtDocumento;
    // End of variables declaration//GEN-END:variables

    public void limpiarCampos() {
        jtDocumento.setText("");
        jtDocumento.setEnabled(true);
        jtClave.setText("");
        jcTipoUsuario.setSelectedIndex(0);

    }

    public void llenarCampos(Usuario u) {
        jtDocumento.setText(u.getDocumento());
        jtDocumento.setEnabled(false);
        jtClave.setText(u.getClave());
        jcTipoUsuario.setSelectedItem(u.getTipoUsuario());

    }

    public Usuario extraerDatos() {
        Usuario u = new Usuario();
        u.setDocumento(jtDocumento.getText().toString());
        u.setClave(jtClave.getText().toString());
        u.setTipoUsuario(jcTipoUsuario.getSelectedItem().toString());
        return u;
    }

    public void validarLongitud(int l, JTextField j, java.awt.event.KeyEvent e) {

        if (j.getText().length() == l) {
            e.consume();
        }

    }

    public void soloNumeros(JTextField j, java.awt.event.KeyEvent e) {
        char caracter = e.getKeyChar();//lee el caracter presionado
        int numero = (int) (caracter);
        if (numero == 10)//para activar letra enter
        {
            j.requestFocus();
        }
        if (((caracter < '0') || (caracter > '9')) && (caracter != KeyEvent.VK_BACK_SPACE) && (numero != 32)) {
            e.consume();  // ignorar el evento de teclado
        }
    }

    public void soloLetras(JTextField j, java.awt.event.KeyEvent e) {
        char caracter = e.getKeyChar(); // para leer el caracter correspondiente a la tecla
        int numero = (int) (caracter);
        if (numero == 10)// PARA LA TECLA ENTER
        {
            j.requestFocus();
        }
        if (((caracter < 'A') || (caracter > 'Z')) && ((caracter < 'a') || (caracter > 'z')) && (caracter != KeyEvent.VK_BACK_SPACE) && (numero != 32)) {
            e.consume();  // ignorar el evento de teclado
        }
    }

    private boolean validacionObligatorios() {
        boolean sw = false;
        JTextField vec[];
        vec = new JTextField[2];
        JLabel vec2[];
        vec2 = new JLabel[2];

        vec[0] = jtDocumento;
        vec[1] = jtClave;
        vec2[0] = jlDocumento;
        vec2[1] = jlClave;

        for (int i = 0; i < vec.length; i++) {
            vec2[i].setForeground(Color.BLACK);
        }
        for (int i = 0; i < vec.length; i++) {
            if (vec[i].getText().equals("")) {
                vec2[i].setForeground(Color.red);
                repaint();
                sw = true;
            }
        }
        jlTipoUsuario.setForeground(Color.BLACK);

        if (jcTipoUsuario.getSelectedItem().toString().equals("")) {
            jlTipoUsuario.setForeground(Color.RED);
            sw = true;
        }

        repaint();
        return sw;
    }

    private void validacionCampos() {

        jtDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                validarLongitud(10, jtDocumento, e);
                soloNumeros(jtDocumento, e);
            }
        });

        jtClave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent e) {
                validarLongitud(15, jtClave, e);

            }
        });
    }
}
